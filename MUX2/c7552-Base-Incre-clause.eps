%!PS-Adobe-2.0
%%Title: c7552-Base-Incre-clause.eps
%%Creator: gnuplot 5.0 patchlevel 1
%%CreationDate: Mon Feb 22 16:06:50 2016
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -83 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (c7552-Base-Incre-clause.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 1)
  /Author (xiangyuzhang)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Feb 22 16:06:50 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 250 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1675 2008 M
63 0 V
5011 0 R
-63 0 V
stroke
1525 2008 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 10000)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1675 2161 M
31 0 V
5043 0 R
-31 0 V
-5043 89 R
31 0 V
5043 0 R
-31 0 V
-5043 64 R
31 0 V
5043 0 R
-31 0 V
-5043 49 R
31 0 V
5043 0 R
-31 0 V
-5043 40 R
31 0 V
5043 0 R
-31 0 V
-5043 34 R
31 0 V
5043 0 R
-31 0 V
-5043 29 R
31 0 V
5043 0 R
-31 0 V
-5043 26 R
31 0 V
5043 0 R
-31 0 V
-5043 24 R
63 0 V
5011 0 R
-63 0 V
stroke
1525 2516 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 100000)]
] -83.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1675 2668 M
31 0 V
5043 0 R
-31 0 V
-5043 90 R
31 0 V
5043 0 R
-31 0 V
-5043 63 R
31 0 V
5043 0 R
-31 0 V
-5043 50 R
31 0 V
5043 0 R
-31 0 V
-5043 40 R
31 0 V
5043 0 R
-31 0 V
-5043 34 R
31 0 V
5043 0 R
-31 0 V
-5043 29 R
31 0 V
5043 0 R
-31 0 V
-5043 26 R
31 0 V
5043 0 R
-31 0 V
-5043 23 R
63 0 V
5011 0 R
-63 0 V
stroke
1525 3023 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 1x10)]
[(Times-Roman) 200.0 125.0 true true 0 (6)]
] -108.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1675 3176 M
31 0 V
5043 0 R
-31 0 V
-5043 90 R
31 0 V
5043 0 R
-31 0 V
-5043 63 R
31 0 V
5043 0 R
-31 0 V
-5043 49 R
31 0 V
5043 0 R
-31 0 V
-5043 40 R
31 0 V
5043 0 R
-31 0 V
-5043 34 R
31 0 V
5043 0 R
-31 0 V
-5043 30 R
31 0 V
5043 0 R
-31 0 V
-5043 26 R
31 0 V
5043 0 R
-31 0 V
-5043 23 R
63 0 V
5011 0 R
-63 0 V
stroke
1525 3531 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 1x10)]
[(Times-Roman) 200.0 125.0 true true 0 (7)]
] -108.3 MRshow
1.000 UL
LTb
LCb setrgbcolor
1675 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
1675 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 0)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2309 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
2309 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 10)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
2944 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
2944 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 20)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
3578 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
3578 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 30)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4212 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
4212 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 40)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
4846 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
4846 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 50)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
5481 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
5481 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 60)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6115 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
6115 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 70)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
6749 2008 M
0 63 V
0 1460 R
0 -63 V
stroke
6749 1758 M
[ [(Times-Roman) 250.0 0.0 true true 0 ( 80)]
] -83.3 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1675 3531 N
0 -1523 V
5074 0 V
0 1523 V
-5074 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
200 2769 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times-Roman) 250.0 0.0 true true 0 (Number of Clauses)]
] -83.3 MCshow
grestore
LTb
LCb setrgbcolor
4212 1383 M
[ [(Times-Roman) 250.0 0.0 true true 0 (Iteration)]
] -83.3 MCshow
LTb
% Begin plot #1
1.000 UP
1.000 UL
LTb
LCa setrgbcolor
LCb setrgbcolor
2860 3168 M
[ [(Times-Roman) 150.0 0.0 true true 0 (Baseline)]
] -50.0 MRshow
1.000 UP
1.000 UL
LTb
LCa setrgbcolor
2950 3168 M
243 0 V
1738 2285 M
64 154 V
63 89 V
64 64 V
63 49 V
64 40 V
63 34 V
63 30 V
64 26 V
63 23 V
64 21 V
63 19 V
64 18 V
63 16 V
63 16 V
64 14 V
63 13 V
64 13 V
63 12 V
64 11 V
63 11 V
63 10 V
64 10 V
63 9 V
64 9 V
63 9 V
63 8 V
64 8 V
63 8 V
64 7 V
63 8 V
64 7 V
63 6 V
63 7 V
64 6 V
63 7 V
64 6 V
63 6 V
64 5 V
63 6 V
63 5 V
64 6 V
63 5 V
64 5 V
63 5 V
64 5 V
63 4 V
63 5 V
64 5 V
63 4 V
64 4 V
63 5 V
64 4 V
63 4 V
63 4 V
64 4 V
63 4 V
64 4 V
63 4 V
64 3 V
63 4 V
63 3 V
64 4 V
1738 2285 Pls
1802 2439 Pls
1865 2528 Pls
1929 2592 Pls
1992 2641 Pls
2056 2681 Pls
2119 2715 Pls
2182 2745 Pls
2246 2771 Pls
2309 2794 Pls
2373 2815 Pls
2436 2834 Pls
2500 2852 Pls
2563 2868 Pls
2626 2884 Pls
2690 2898 Pls
2753 2911 Pls
2817 2924 Pls
2880 2936 Pls
2944 2947 Pls
3007 2958 Pls
3070 2968 Pls
3134 2978 Pls
3197 2987 Pls
3261 2996 Pls
3324 3005 Pls
3387 3013 Pls
3451 3021 Pls
3514 3029 Pls
3578 3036 Pls
3641 3044 Pls
3705 3051 Pls
3768 3057 Pls
3831 3064 Pls
3895 3070 Pls
3958 3077 Pls
4022 3083 Pls
4085 3089 Pls
4149 3094 Pls
4212 3100 Pls
4275 3105 Pls
4339 3111 Pls
4402 3116 Pls
4466 3121 Pls
4529 3126 Pls
4593 3131 Pls
4656 3135 Pls
4719 3140 Pls
4783 3145 Pls
4846 3149 Pls
4910 3153 Pls
4973 3158 Pls
5037 3162 Pls
5100 3166 Pls
5163 3170 Pls
5227 3174 Pls
5290 3178 Pls
5354 3182 Pls
5417 3186 Pls
5481 3189 Pls
5544 3193 Pls
5607 3196 Pls
5671 3200 Pls
3071 3168 Pls
% End plot #1
% Begin plot #2
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
2860 3318 M
[ [(Times-Roman) 150.0 0.0 true true 0 (Incremental)]
] -50.0 MRshow
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
2950 3318 M
243 0 V
1738 2341 M
64 34 V
63 113 V
64 -32 V
63 30 V
64 28 V
63 23 V
63 22 V
64 19 V
63 18 V
64 16 V
63 14 V
64 43 V
63 35 V
63 -37 V
64 12 V
63 34 V
64 -12 V
63 31 V
64 -10 V
63 9 V
63 9 V
64 27 V
63 -9 V
64 8 V
63 24 V
63 -10 V
64 23 V
63 -9 V
64 6 V
63 21 V
64 18 V
63 -20 V
63 6 V
64 5 V
63 5 V
64 6 V
63 5 V
64 5 V
63 6 V
63 5 V
64 5 V
63 15 V
64 -6 V
63 4 V
64 4 V
63 5 V
63 -3 V
64 14 V
63 -9 V
64 14 V
63 12 V
64 -18 V
63 3 V
63 1 V
64 13 V
63 -13 V
64 13 V
63 12 V
64 12 V
63 -24 V
63 1 V
64 2 V
63 -6 V
64 12 V
63 -9 V
63 3 V
64 1 V
63 2 V
64 2 V
63 3 V
1738 2341 Crs
1802 2375 Crs
1865 2488 Crs
1929 2456 Crs
1992 2486 Crs
2056 2514 Crs
2119 2537 Crs
2182 2559 Crs
2246 2578 Crs
2309 2596 Crs
2373 2612 Crs
2436 2626 Crs
2500 2669 Crs
2563 2704 Crs
2626 2667 Crs
2690 2679 Crs
2753 2713 Crs
2817 2701 Crs
2880 2732 Crs
2944 2722 Crs
3007 2731 Crs
3070 2740 Crs
3134 2767 Crs
3197 2758 Crs
3261 2766 Crs
3324 2790 Crs
3387 2780 Crs
3451 2803 Crs
3514 2794 Crs
3578 2800 Crs
3641 2821 Crs
3705 2839 Crs
3768 2819 Crs
3831 2825 Crs
3895 2830 Crs
3958 2835 Crs
4022 2841 Crs
4085 2846 Crs
4149 2851 Crs
4212 2857 Crs
4275 2862 Crs
4339 2867 Crs
4402 2882 Crs
4466 2876 Crs
4529 2880 Crs
4593 2884 Crs
4656 2889 Crs
4719 2886 Crs
4783 2900 Crs
4846 2891 Crs
4910 2905 Crs
4973 2917 Crs
5037 2899 Crs
5100 2902 Crs
5163 2903 Crs
5227 2916 Crs
5290 2903 Crs
5354 2916 Crs
5417 2928 Crs
5481 2940 Crs
5544 2916 Crs
5607 2917 Crs
5671 2919 Crs
5734 2913 Crs
5798 2925 Crs
5861 2916 Crs
5924 2919 Crs
5988 2920 Crs
6051 2922 Crs
6115 2924 Crs
6178 2927 Crs
3071 3318 Crs
% End plot #2
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1675 3531 N
0 -1523 V
5074 0 V
0 1523 V
-5074 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Roman
%%Pages: 1
